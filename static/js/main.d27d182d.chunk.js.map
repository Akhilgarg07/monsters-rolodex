{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","m","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BACtB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCFbC,EAAW,SAACR,GACrB,OAAO,sBAAKC,UAAU,YAAf,cACHD,EAAMS,SAASC,KAAI,SAAAC,GAAC,OAChB,cAAC,EAAD,CAAiBP,QAASO,GAAfA,EAAEN,WCLZO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2CHG,E,kDA5CX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTT,SAAS,GAcTU,YAAY,IAjBN,E,qDAqBd,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAASe,S,oBAG/C,WAAU,IAAD,SAC6BE,KAAKR,MAA/BT,EADH,EACGA,SAAUU,EADb,EACaA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAjB,GAAC,OACtCA,EAAEL,KAAKuB,cAAcC,SAASX,EAAYU,kBAClD,OACI,sBAAK5B,UAAU,MAAf,UACI,oDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAC1EN,YAAYY,EAAEC,OAAOC,WACrB,cAAC,EAAD,CAAUxB,SAAUkB,W,GArCdO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d27d182d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}/?set=set2&size=180x180`}/>\r\n        <h2> {props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from \"../card/card.component\";\r\n\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'> {\r\n        props.monsters.map(m =>\r\n            <Card key={m.id} monster={m}/>)\r\n    }</div>\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}/>\r\n)","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { CardList} from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component{\n    constructor() {\n        super();\n        this.state = {\n            monsters:[\n                // {\n                //     name:\"Frankenstein\",\n                //     id:\"one\"\n                // },\n                // {\n                //     name:\"Dracula\",\n                //     id:\"two\"\n                // },\n                // {\n                //     name: \"Zombie\",\n                //     id:\"three\"\n                // }\n            ],\n            searchField:''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response =>response.json())\n            .then(users => this.setState({monsters:users}))\n    }\n\n    render() {\n        const { monsters, searchField } = this.state\n        const filteredMonsters = monsters.filter(m =>\n            m.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n        <div className=\"App\">\n            <h1> Monsters Rolodex </h1>\n            <SearchBox placeholder=\"search monsters\" handleChange={e => this.setState({\n            searchField:e.target.value})} />\n            <CardList monsters={filteredMonsters}/>\n\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}